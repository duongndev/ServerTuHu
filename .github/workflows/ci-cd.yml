name: CI/CD Pipeline TuHuBread

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
      PORT: 5000
      # MongoDB Atlas
      MONGO_URI: ${{ secrets.MONGO_ATLAS_URI }}
      DB_NAME: ${{ secrets.MONGO_ATLAS_DB }}
      DB_USER: ${{ secrets.MONGO_ATLAS_USER }}
      DB_PASS: ${{ secrets.MONGO_ATLAS_PASS }}
      # App secrets
      JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
      JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      SESSION_ENCRYPTION_KEY: ${{ secrets.SESSION_ENCRYPTION_KEY }}
      # Cloudinary
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      # Email
      MAIL_HOST: ${{ secrets.EMAIL_HOST }}
      MAIL_USER: ${{ secrets.EMAIL_USER }}
      MAIL_PASS: ${{ secrets.EMAIL_PASS }}
      MAIL_PORT: ${{ secrets.EMAIL_PORT }}
      MAIL_SERVICE: ${{ secrets.EMAIL_SERVICE }}
      # Firebase
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
      FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
      FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
      FIREBASE_TYPE: ${{ secrets.FIREBASE_TYPE }}
      FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - run: npm install
      - name: Run smoke test
        run: |
          node server.js &
          for i in {1..30}; do
            if curl -fsS http://localhost:5000/health > /dev/null; then
              echo "Health OK"; exit 0; fi
            echo "Waiting for health... ($i)"; sleep 2; done
          echo "Health check failed"; curl -v http://localhost:5000/health || true; exit 1

  docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/tuhu-bread:${{ github.run_number }}
            ${{ secrets.DOCKERHUB_USERNAME }}/tuhu-bread:latest